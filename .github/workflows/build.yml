# Copied from https://raw.githubusercontent.com/dolphin2410/server-script/master/.github/workflows/rust.yml

on: [push]

name: Build

jobs:
  windows:
    name: Windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: build
        run: cargo build --release
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: windows
          path: target/release/minecraft-server-launcher.exe

  mac:
    name: MacOS
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: build
        run: cargo build --release
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: darwin
          path: target/release/minecraft-server-launcher

  ubuntu:
    name: Linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: build
        run: cargo build --release
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: linux
          path: target/release/minecraft-server-launcher

  upload:
    needs: [ubuntu, mac, windows]
    name: Upload Artifacts
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # Download artifacts
      - uses: actions/download-artifact@v2
        with:
          name: windows
          path: output/windows/minecraft-server-launcher
      - uses: actions/download-artifact@v2
        with:
          name: linux
          path: output/linux/minecraft-server-launcher
      - uses: actions/download-artifact@v2
        with:
          name: darwin
          path: output/darwin/minecraft-server-launcher

      # Parse version to output
      - name: Get version
        run: echo "::set-output name=version::$(grep -Po '(?<=version = \").+(?=\")' Cargo.toml)"
        id: version

      # Create Release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.version }}
          release_name: Release ${{ steps.version.outputs.version }}
          draft: false
          prerelease: false
        continue-on-error: true

      # Upload Windows Asset
      - name: Upload Release Asset (Windows)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: output/windows/minecraft-server-launcher/minecraft-server-launcher.exe
          asset_name: minecraft-server-launcher-windows.exe
          asset_content_type: application/vnd.microsoft.portable-executable
        continue-on-error: true

      # Upload Linux Assets
      - name: Upload Release Asset (Linux)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: output/linux/minecraft-server-launcher/minecraft-server-launcher
          asset_name: minecraft-server-launcher-linux
          asset_content_type: application/x-binary
        continue-on-error: true

      # Upload Darwin assets
      - name: Upload Release Asset (Darwin)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: output/darwin/minecraft-server-launcher/minecraft-server-launcher
          asset_name: minecraft-server-launcher-darwin
          asset_content_type: application/x-binary
        continue-on-error: true
